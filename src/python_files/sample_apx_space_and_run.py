# Copyright (C) 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# 


## 
# @file sample_apx_space_and_run.py
# @brief this file contains all the modules responsible for sampling the apx_op_space (generated by src_parse_and_apx_op_space_gen) and running them
# @author Behzad Boroujerdian
# @date 2015-07-01

import os
from make_run import make_run
import settings

## 
# @brief this module samples one instance of the apxOpSpace and invokes make_run (which runs the module under test) in a loop (untill all of the space is exhusted)
# 
# @param rootResultFolderName
# @param resultFileName
# 
# @return  no return value
def sample_apx_space_and_run(executableName, executableInputList, rootResultFolderName, resultFileName, CBuildFolder, operandSampleFileName):
    
    
    srcFileOpSpacePtr = open(rootResultFolderName + "/" + settings.AllPossibleApxOpScenarios, "r") #input file ptr
    
    operatorSampleFileNameP = open(rootResultFolderName + "/" +settings.operatorSampleFileName, "w")
    operatorSampleFileNameP.close()
    start = 0
    for line in srcFileOpSpacePtr:
        for words in line.replace(',', ' ').replace('/',' ').replace(';', ' ').split(' '): #find the lines with key word and write it to another file
            if "end" in words: 
                start = 0
                operatorSampleFileNameP.close()
                make_run(executableName, executableInputList, rootResultFolderName, resultFileName, CBuildFolder, operandSampleFileName)
                #os.system("python run_test.py"); #building and running the module under test
                #print "*****done" 
                if settings.GENERATE_ONE_OUTPUT == 1: 
                    exit();
                break;
            if (start==1):
                operatorSampleFileNameP.write(line); 
                #print line #for debugging purposses
                break; 
            if "start" in words: 
                operatorSampleFileNameP = open(rootResultFolderName + "/" + settings.operatorSampleFileName, "w")
                start = 1
                break;

    operatorSampleFileNameP.close() 
    #srcFileOpSpacePtr.close()              

# Copyright (C) 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# 


## 
# @file modify_operator_sample_file.py
# @brief this file contains all the modules responsible for sampling the apx_op_space (generated by src_parse_and_apx_op_space_gen) and running them
# @author Behzad Boroujerdian
# @date 2015-07-01
import sys
import os
from make_run import make_run
import settings
import copy 
def modifyMold(mold_orig, bits):
    #print mold_orig
    #print bits
    result = [] 
    mold = copy.deepcopy(mold_orig) 
    for index, op in enumerate(mold):
        op[2] = bits[index];
        result.append(op[:])

    return result;

def modifyOperatorSampleFile(operatorSampleFileFullAddress, setUp):
    
    operatorSampleFileNameP = open(operatorSampleFileFullAddress, "w")
    for operator in setUp:
        if not(type(operator) == list):
            operator = operator.split()
            operatorPart2= [int(myListElement) for myListElement in operator[1:]]
            operator = [operator[0]]+ operatorPart2 
        for index,myProperty in enumerate(operator):
            #if(inex == 2): 
            #    operatorSampleFileNameP.write(str(myProperty).replace(',', ' ').replace("'", ' ') + " ")
            #else: 
            operatorSampleFileNameP.write(str(myProperty).replace(',', ' ').replace("'", ' ') + " ")
        
        operatorSampleFileNameP.write("\n")

    operatorSampleFileNameP.close()
    
    
